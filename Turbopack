Turbopack
特性--
天生增量，构建过的绝不重新构建
生态友好，支持 TypeScript、JSX、CSS、CSS Modules、WebAssembly 等
热更极快，比 Vite 快 10 倍
原生支持 RSC（React Server Components）
支持多环境，比如 Browser、Server、Edge、SSR、RSC
支持 NextJS
快速--
基于 Rust 二进制语言
内置增量计算引擎。该引擎结合 Turborepo 以及 Google 的 Bazel 的增量计算的创新，可以将缓存提高到单个函数的水平
缓存。但现在只支持内存缓存，未来会支持持久化缓存，存文件系统或远程服务器
基于请求的按需编译。
使用原因--
Vite 这种 Bundless 的方式，由于只要编译一个文件，所以响应式更新速度极快。但在处理模块较多的大型应用时，大量级联的网络请求会导致相对缓慢的启动时间。对于浏览器来说，更多请求也意味着更慢的速度。
Turbopack 内置了可重复使用的 Turbo 构建引擎，这类似一个函数调用的调度器，允许并行执行，更重要的是，他会缓存所有调度的函数的结果，这意味着同样的工作永远不需要做两次。
为啥不用 esbuild？因为 esbuild 虽然快，但是，1）不支持 HMR，2）没有缓存，这意味着你需要重复做同样的工作，3）不支持懒打包，比如基于路由和请求的按需打包方案。
Turbopack 支持在 dev 模式下做懒打包，当一个请求过来，会建立懒模块依赖图，只计算用到的模块，然后打包出单一的块返回给浏览器。作者认为，在大型应用里，这会比 Native ESM 快地多。
功能--
JavaScript 和 TypeScript 的打包基于 SWC，支持在 package.json 中定义 browserslist 声明需要支持的浏览器，暂不支持 Babel 及其插件，未来会以插件形式支持 Babel
TypeScript 支持 tsconfig.json 中声明的 paths 和 baseUrl，类似 webpack 的 alias，但不支持 TypeScript 的类型校验，需要单独执行 tsc --watch 或者依赖 IDE 的 TypeScript 集成能力
支持 React 的 JSX 和 RSC，暂不支持 next/dynamic，暂不支持 Vue 和 Svelte，未来会以插件形式支持
CSS 基于 SWC（swc_css），支持全局 CSS 和 CSS Modules，约定 .module.css 即为 CSS Modules，内置支持 postcss-nested 语法，所以可以在 CSS 里直接用嵌套语法，支持 @import 语法来引入额外 CSS 文件，暂不支持 PostCSS 插件，但可通过手动执行 postcss-cli 绕过，不支持 SCSS 和 LESS，暂不支持 Tailwind CSS
Dev Server 支持 HMR 和 Fast Refresh
静态资源支持 import assets 资源、public 目录和 JSON
import 语法上支持 CJS 和 ESM，部分支持 AMD，支持动态 require()、type import 和动态 import()
环境变量支持 .env 文件并同时支持实时 reload（无需手动重启），支持 process.env 做变量注入
